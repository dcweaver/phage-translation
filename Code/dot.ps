%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.4.14
%%CreationDate: Mon Mar  2 14:07:46 2020
%%Title: RNA Dot Plot
%%BoundingBox: 0 0 700 720
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

% Program options: 

% This file contains the square roots of probabilities in the form
% i  j  sqrt(p(i,j)) ubox

/DPdict 100 dict def

DPdict begin

%%BeginProlog

/logscale false def
/lpmin 1e-05 log def
/DataVisible  [ true true true true] def
/DataTitles   [ false false false false ] def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/box { %size x y box - draws box centered on x,y
   2 index 0.5 mul sub            % x -= 0.5
   exch 2 index 0.5 mul sub exch  % y -= 0.5
   3 -1 roll dup rectfill
} bind def
/ubox {
   logscale {
      log dup add lpmin div 1 exch sub dup 0 lt { pop 0 } if
   } if
   3 1 roll
   exch len exch sub 1 add box
} bind def
/lbox {
   3 1 roll
   len exch sub 1 add box
} bind def
/drawseq { % print sequence along all 4 sides
[ [0.7 -0.3 0 ]
  [0.7 0.7 len add 0]
  [-0.3 len sub -0.4 -90]
  [-0.3 len sub 0.7 len add -90]
] {
   gsave
    aload pop rotate translate
    0 1 len 1 sub {
     dup 0 moveto
     sequence exch 1 getinterval
     show
    } for
   grestore
  } forall
} bind def
/drawgrid{
  gsave
  0.5 dup translate
  0.01 setlinewidth
  len log 0.9 sub cvi 10 exch exp  % grid spacing
  dup 1 gt {
     dup dup 20 div dup 2 array astore exch 40 div setdash
  } { [0.3 0.7] 0.1 setdash } ifelse
  0 exch len {
     dup dup
     0 moveto
     len lineto
     dup
     len exch sub 0 exch moveto
     len exch len exch sub lineto
     stroke
  } for
  [] 0 setdash
  0.04 setlinewidth
  currentdict /cutpoint known {
    cutpoint 1 sub
    dup dup -1 moveto len 1 add lineto
    len exch sub dup
    -1 exch moveto len 1 add exch lineto
    stroke
  } if
  % draw diagonal
  0 len moveto len 0 lineto stroke
  grestore
} bind def
/drawTitle {
  currentdict /DPtitle known {
    % center title text
    /Helvetica findfont 10 scalefont setfont
    360 705 moveto DPtitle dup stringwidth pop 2 div neg 0 rmoveto show
  } if
} bind def
/prepareCoords {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      DataSource exch get dup currentdict exch known {
        % data source s_j is present, so find length of array
        currentdict exch get length 
      } { pop 0 } ifelse
    } if
  } for
  exch dup 5 -1 roll add 4 -1 roll dup 5 1 roll 4 -1 roll add max
  len add 3 add 700 exch div dup scale
  exch 1 add exch 1 add translate
} bind def
/utri{ % i j prob utri
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.33
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uUDmotif{ % i j uUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lUDmotif{ % i j lUDmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95 0.6
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uHmotif{ % i j uHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  exch 1 sub dup len exch sub dup 4 -1 roll dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/lHmotif{ % i j lHmotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  dup len exch sub dup 4 -1 roll 1 sub dup 3 1 roll dup len exch sub
  moveto lineto lineto closepath fill
  grestore
} bind def
/uImotif{ % i j k l uImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  1 sub dup 5 1 roll exch len exch sub dup 5 1 roll 3 -1 roll dup
  5 1 roll exch 4 1 roll 3 1 roll exch 1 sub len exch sub dup 3 1 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/lImotif{ % i j k l lImotif
  gsave
  0.5 dup translate
  1 min 2 div
  0.85 mul 0.15 add 0.95  0.99
  3 1 roll % prepare hsb color
  sethsbcolor
  % now produce the coordinates for lines
  4 -1 roll 1 sub dup 5 1 roll exch 1 sub len exch sub dup 3 -1 roll exch
  5 -1 roll len exch sub dup 6 -1 roll dup 3 1 roll 7 4 roll
  moveto lineto lineto lineto closepath fill
  grestore
} bind def
/drawDataSquareBottom { % x v n dataSquareBottom draw box
  len add 2 add exch lbox
} bind def
/drawDataSquareTop { % x v n dataSquareBottom draw box
  neg 1 sub exch lbox
} bind def
/drawDataSquareLeft { % y v n dataSquareBottom draw box
  neg 1 sub 3 1 roll lbox
} bind def
/drawDataSquareRight { % y v n dataSquareBottom draw box
  % use size x y box to draw box
  2 add len add 3 1 roll lbox
} bind def
/drawDataSquareBottomHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  len add 2 add 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareTopHSB { % x v h s b n dataSquareBottomHSB draw box
  % use size x y box to draw box
  neg 1 sub 5 1 roll sethsbcolor lbox
} bind def
/drawDataSquareLeftHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  neg 1 sub 6 1 roll sethsbcolor lbox
} bind def
/drawDataSquareRightHSB { % x v h s b n dataSquareLeftHSB draw box
  % use size x y box to draw box
  2 add len add 6 1 roll sethsbcolor lbox
} bind def
/drawDataTitleBottom {
  /Helvetica findfont 0.95 scalefont setfont
  0 -1.4 3 -1 roll sub moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleTop {
  /Helvetica findfont 0.95 scalefont setfont
  0 len 1.6 add 3 -1 roll add moveto 
  dup stringwidth pop neg 0 rmoveto   
  show
} bind def
/drawDataTitleLeft {
  /Helvetica findfont 0.95 scalefont setfont
  neg 1.4 sub len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
/drawDataTitleRight {
  /Helvetica findfont 0.95 scalefont setfont
  1.6 add len add len 1 add moveto 
  dup stringwidth pop 0 exch rmoveto -90 rotate
  show 90 rotate
} bind def
% do not modify the arrays below unless you know what you're doing!
/DataSource     [ /topData /leftData /bottomData /rightData ] def
/DataDrawBox    [ /drawDataSquareTop  /drawDataSquareLeft /drawDataSquareBottom /drawDataSquareRight] def
/DataDrawBoxHSB [ /drawDataSquareTopHSB /drawDataSquareLeftHSB /drawDataSquareBottomHSB /drawDataSquareRightHSB ] def
/DataDrawTitle  [ /drawDataTitleTop /drawDataTitleLeft /drawDataTitleBottom /drawDataTitleRight ] def
% this is the logic to parse the auxiliary linear data
% given in arrays topData, leftData, bottomData, and rightData
% See also the Boolean arrays DataVisible and DataTitles that
% are used to control which part of data will be visible
/drawData {
  0 1 3 {
    % check whether we want to display current data
    dup DataVisible exch get
    {
      % check whether we've actually got some data
      dup DataSource exch get dup currentdict exch known {
        % data source s_j is present, so we load the
        % corresponding data array a and loop over all data sets a[i]
        currentdict exch get dup length 1 sub 0 1 3 -1 roll {
          dup dup
          % now on stack: j a i i i
          % load data set, i.e. a[i]
          4 -1 roll         % j i i i a
          dup 3 -1 roll get dup % j i i a a[i] a[i]
          % 1. check whether we need to process data set title
          6 -1 roll dup 7 1 roll DataTitles exch get {
            % get current title drawing function key
            6 -1 roll dup 7 1 roll DataDrawTitle exch get
            % now on stack: ... j i i a a[i] a[i] title_draw_key
            % get current title and execute drawing function
            exch 0 get exch currentdict exch get 5 -1 roll exch exec
          } { % remove unused variables
              pop 3 -1 roll pop
          } ifelse
          % now on stack: ... j i a a[i]
          % 2. process actual data a[k] for 1 <= k < n
          dup length 1 sub 1 exch getinterval { 
            % on stack: j i a a[i][k]
            gsave
            dup length 2 eq { % print black box if two-valued
              % get box drawing function
              4 -1 roll dup 5 1 roll DataDrawBox exch get currentdict exch get exch
              aload pop 5 -1 roll dup 6 1 roll 4 -1 roll exec
            } {
              dup length 5 eq { % print box with hsb color
                % get box drawing function
                4 -1 roll dup 5 1 roll DataDrawBoxHSB exch get currentdict exch get exch
                % on stack: j i a f a[i]
                % load data array and prepare for drawing
                aload pop 8 -1 roll dup 9 1 roll 7 -1 roll exec
              } { pop } ifelse
            } ifelse
            grestore
          } forall
          exch pop 
          % left on stack: j a
        } for
        
      } if
    } if
  } for
} bind def

%%EndProlog

/DPtitle {
  (dot.ps)
} def

/sequence { (\
CCGCCACUCAACCCGCUGAGGCUUUACGUUAUGAAUAAGAUCCUGUUGCAAUGCGACAAC\
) } def
/len { sequence length } bind def

% BEGIN linear data array

/topData [
] def

/leftData [
] def

/bottomData [
] def

/rightData [
] def

% END linear data arrays

%Finally, prepare canvas

%draw title
drawTitle

%prepare coordinate system, draw grid and sequence
/Helvetica findfont 0.95 scalefont setfont

%prepare coordinate system
prepareCoords

%draw sequence arround grid
drawseq

%draw grid
drawgrid

%draw auxiliary linear data (if available)
drawData

%data (commands) starts here

%start of quadruplex data

%start of Hmotif data

%start of Imotif data
%start of base pair probability data
1 18 0.011501008 ubox
1 20 0.003634583 ubox
1 21 0.018239216 ubox
1 28 0.018134652 ubox
1 33 0.011259378 ubox
1 39 0.010093105 ubox
2 15 0.004707437 ubox
2 18 0.009118927 ubox
2 20 0.017887584 ubox
2 21 0.008925183 ubox
2 28 0.098204727 ubox
2 33 0.025205609 ubox
2 39 0.022647663 ubox
2 55 0.040254684 ubox
3 7 0.003355304 ubox
3 9 0.003455213 ubox
3 12 0.004300182 ubox
3 14 0.004803614 ubox
3 16 0.028763049 ubox
3 17 0.003912360 ubox
3 22 0.925189251 ubox
3 23 0.027831581 ubox
3 24 0.022437838 ubox
3 25 0.015724151 ubox
3 27 0.096705096 ubox
3 29 0.023803216 ubox
3 32 0.016165212 ubox
3 42 0.004280788 ubox
3 43 0.006415065 ubox
3 54 0.040645306 ubox
3 60 0.007647395 ubox
4 15 0.028736546 ubox
4 18 0.005825441 ubox
4 20 0.004551600 ubox
4 21 0.917467898 ubox
4 28 0.024806689 ubox
4 33 0.006394535 ubox
4 39 0.006885374 ubox
4 53 0.040042896 ubox
5 15 0.004154484 ubox
5 18 0.013649080 ubox
5 20 0.815388497 ubox
5 21 0.163711502 ubox
5 28 0.005309400 ubox
5 33 0.020667200 ubox
5 39 0.008101600 ubox
5 53 0.006468606 ubox
6 17 0.016139892 ubox
6 23 0.008766500 ubox
6 24 0.014234160 ubox
6 25 0.005929073 ubox
6 29 0.018249553 ubox
6 32 0.019899572 ubox
6 36 0.006971813 ubox
6 52 0.008559699 ubox
7 15 0.019568915 ubox
7 18 0.198737226 ubox
7 20 0.565515620 ubox
7 21 0.011907100 ubox
7 28 0.019149553 ubox
7 33 0.007140372 ubox
7 39 0.005734915 ubox
8 15 0.011195383 ubox
8 18 0.007683609 ubox
8 19 0.928566939 ubox
8 20 0.005543975 ubox
8 26 0.010411264 ubox
8 34 0.034877169 ubox
8 38 0.005195754 ubox
8 40 0.007861716 ubox
8 50 0.006961015 ubox
9 15 0.083199440 ubox
9 18 0.958075005 ubox
9 28 0.003590396 ubox
9 33 0.036556569 ubox
9 39 0.008371753 ubox
9 48 0.033414875 ubox
10 17 0.896074222 ubox
10 23 0.004504459 ubox
10 24 0.021866173 ubox
10 25 0.008606147 ubox
10 30 0.014756255 ubox
10 32 0.034855926 ubox
10 47 0.033516412 ubox
11 17 0.027019444 ubox
11 23 0.023624704 ubox
11 24 0.008498323 ubox
11 29 0.018718818 ubox
11 46 0.033439811 ubox
12 18 0.004777460 ubox
12 21 0.024644858 ubox
12 28 0.018970715 ubox
12 45 0.033303594 ubox
13 18 0.005160709 ubox
13 20 0.024596402 ubox
13 21 0.048101875 ubox
13 33 0.003948513 ubox
14 18 0.007617442 ubox
14 20 0.048429387 ubox
14 21 0.004444295 ubox
14 28 0.032311171 ubox
14 33 0.015866444 ubox
14 55 0.013342452 ubox
15 22 0.026221313 ubox
15 27 0.032488322 ubox
15 29 0.009351699 ubox
15 32 0.015502794 ubox
15 42 0.004465335 ubox
15 43 0.003900509 ubox
15 49 0.004892618 ubox
15 54 0.013493060 ubox
16 21 0.026181766 ubox
16 28 0.009595551 ubox
16 33 0.008922066 ubox
16 39 0.012351559 ubox
16 48 0.004892346 ubox
16 53 0.013479630 ubox
17 26 0.030945689 ubox
17 31 0.023886349 ubox
17 38 0.012058901 ubox
17 50 0.005242850 ubox
18 24 0.006242235 ubox
18 25 0.031018658 ubox
18 27 0.004692358 ubox
18 29 0.003856545 ubox
18 30 0.025036875 ubox
18 42 0.011334685 ubox
18 43 0.007103199 ubox
18 49 0.005697672 ubox
19 23 0.005454813 ubox
19 24 0.028738295 ubox
19 29 0.024999217 ubox
19 30 0.003573534 ubox
19 36 0.006996381 ubox
19 41 0.011344386 ubox
19 44 0.040100407 ubox
20 27 0.014421442 ubox
20 29 0.003532792 ubox
20 30 0.017525727 ubox
20 42 0.013020717 ubox
20 43 0.046679090 ubox
20 47 0.005021136 ubox
21 25 0.004113469 ubox
21 27 0.034828570 ubox
21 29 0.079378359 ubox
21 30 0.008025527 ubox
21 36 0.012409533 ubox
21 41 0.019755427 ubox
21 42 0.048691145 ubox
21 43 0.014220074 ubox
21 46 0.006722530 ubox
21 49 0.018730812 ubox
21 54 0.014293155 ubox
22 28 0.082703321 ubox
22 33 0.028352300 ubox
22 39 0.109666551 ubox
22 45 0.006794706 ubox
22 48 0.018736421 ubox
22 53 0.014286054 ubox
23 28 0.013511608 ubox
23 31 0.018782998 ubox
23 33 0.018248660 ubox
23 34 0.091693648 ubox
23 35 0.173994247 ubox
23 37 0.018767008 ubox
23 38 0.112589268 ubox
23 39 0.097289369 ubox
23 40 0.055620126 ubox
23 58 0.004528833 ubox
23 59 0.013854160 ubox
24 28 0.008318724 ubox
24 31 0.032605940 ubox
24 33 0.096589706 ubox
24 34 0.199979843 ubox
24 35 0.053522227 ubox
24 37 0.108215805 ubox
24 38 0.114079116 ubox
24 39 0.057867468 ubox
24 40 0.041301540 ubox
24 51 0.011241961 ubox
24 56 0.008278732 ubox
24 58 0.015023349 ubox
24 59 0.007923432 ubox
25 31 0.034666301 ubox
25 33 0.202242208 ubox
25 34 0.061509644 ubox
25 35 0.029171658 ubox
25 37 0.117169240 ubox
25 38 0.053302181 ubox
25 39 0.043272657 ubox
25 40 0.016940495 ubox
25 45 0.006619062 ubox
25 50 0.011241851 ubox
25 55 0.008354985 ubox
25 56 0.011332458 ubox
25 58 0.007708599 ubox
25 59 0.005199458 ubox
26 30 0.032584563 ubox
26 32 0.187732284 ubox
26 36 0.109976858 ubox
26 41 0.037069060 ubox
26 44 0.009098118 ubox
26 46 0.012159549 ubox
27 33 0.121300613 ubox
27 39 0.083202333 ubox
27 45 0.012633661 ubox
27 48 0.013849160 ubox
27 53 0.016950410 ubox
27 55 0.070740957 ubox
28 32 0.076082734 ubox
28 36 0.090754808 ubox
28 41 0.152616123 ubox
28 42 0.056711297 ubox
28 43 0.039024370 ubox
28 44 0.011538310 ubox
28 47 0.013754500 ubox
28 49 0.006737245 ubox
28 52 0.017330309 ubox
28 54 0.072019370 ubox
28 57 0.008305369 ubox
28 60 0.031992552 ubox
29 33 0.024586460 ubox
29 34 0.023892396 ubox
29 35 0.094030155 ubox
29 37 0.023210959 ubox
29 38 0.105145998 ubox
29 39 0.023364200 ubox
29 40 0.163310000 ubox
29 48 0.006604553 ubox
29 51 0.017103777 ubox
29 53 0.069297407 ubox
29 56 0.008239135 ubox
29 59 0.031896697 ubox
30 34 0.079449653 ubox
30 35 0.022823660 ubox
30 37 0.116203532 ubox
30 38 0.027233296 ubox
30 39 0.163295046 ubox
30 40 0.019329988 ubox
30 45 0.013484125 ubox
30 50 0.013959190 ubox
30 51 0.007155006 ubox
30 53 0.015621822 ubox
30 55 0.007473055 ubox
30 58 0.016985151 ubox
30 59 0.004827571 ubox
31 36 0.105878854 ubox
31 41 0.059895538 ubox
31 44 0.023808262 ubox
31 46 0.003886813 ubox
31 52 0.021975458 ubox
32 37 0.032084666 ubox
32 38 0.057399559 ubox
32 39 0.023089677 ubox
32 40 0.064949218 ubox
32 45 0.003761018 ubox
32 48 0.005726010 ubox
32 50 0.050980197 ubox
32 51 0.018415121 ubox
32 59 0.004924921 ubox
33 41 0.005854661 ubox
33 42 0.203834907 ubox
33 43 0.050434037 ubox
33 44 0.003900739 ubox
33 47 0.004589288 ubox
33 49 0.058120002 ubox
33 60 0.003583769 ubox
34 41 0.193273342 ubox
34 44 0.005200937 ubox
34 46 0.003785935 ubox
34 47 0.069868244 ubox
35 41 0.034305248 ubox
35 44 0.008394445 ubox
35 46 0.070841777 ubox
35 47 0.014508672 ubox
36 40 0.033942844 ubox
36 45 0.070823104 ubox
36 48 0.008447972 ubox
36 59 0.006620518 ubox
37 41 0.008014196 ubox
37 44 0.066722541 ubox
37 47 0.009242432 ubox
38 44 0.048217489 ubox
38 46 0.009217513 ubox
39 43 0.055215271 ubox
39 44 0.006516240 ubox
39 47 0.004417074 ubox
39 60 0.020575915 ubox
40 44 0.007897995 ubox
40 46 0.004512047 ubox
41 45 0.004195075 ubox
41 56 0.003759529 ubox
41 58 0.007213790 ubox
41 59 0.032175745 ubox
42 55 0.003930175 ubox
44 55 0.009905276 ubox
44 58 0.918927800 ubox
44 59 0.033115466 ubox
45 54 0.012737729 ubox
45 57 0.995241287 ubox
45 60 0.027173793 ubox
46 53 0.012613104 ubox
46 56 0.995221223 ubox
46 59 0.027585998 ubox
47 55 0.994621236 ubox
47 58 0.027752091 ubox
48 54 0.995408724 ubox
48 57 0.027760094 ubox
49 53 0.988194760 ubox
49 55 0.018076698 ubox
3 22 0.9500000 lbox
4 21 0.9500000 lbox
5 20 0.9500000 lbox
8 19 0.9500000 lbox
9 18 0.9500000 lbox
10 17 0.9500000 lbox
44 58 0.9500000 lbox
45 57 0.9500000 lbox
46 56 0.9500000 lbox
47 55 0.9500000 lbox
48 54 0.9500000 lbox
49 53 0.9500000 lbox
showpage
end
%%EOF
